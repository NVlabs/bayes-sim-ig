env:
  numEnvs: 100
  episodeLength: 200

  # for BayesSim experiments
  realParams:
    weights: [ 1.0 ]
    means: [ [ 1.0, 0.5 ] ]
    stds: [ [ 0.00001, 0.00001 ] ]

rkhsnet:
  enable: True
  nFeat: 100

bayessim:
  trainTrajs: 10000  # number of training trajs to collect for BayesSim training
  collectPolicy: 'policy_random'  # policy for getting BayesSim training data
  summarizerFxn: 'summary_start'  # function to make trajectory summaries
  trainTrajLen: 20   # train on short trajectories with maxlen=trainTrajLen
  ftune: True        # whether to finetune BayesSim or re-init at each iteration
  modelClass: MDNN   # BayesSim model ('MDNN' or 'MDRFF')
  components: 10     # number of components in the posterior mixture
  hiddenLayers: [128, 128]  # size of hidden layers for BayesSim NN
  lr: 1.e-4          # optimizer learning rate for BayesSim
  realEvals: 100     # number of surrogate 'real' test episodes (only for eval)
  realTrajs: 1       # number of episodes to run on real hardware per iteration
  realIters: 20      # maximum number of BayesSim iterations
  ftuneRL: False     # fine-tune or re-start RL after each BayesSim iteration

task:
  randomize: True
  randomization_params:
    # frequency: 1000  # do not set frequency, so that IG can randomize any time
    # note: pendulum supports changing only mass and length
    actor_params:
      pendulum:
        rigid_body_properties:
          mass:
            range: [0.01, 2.0]
            operation: "scaling"
            distribution: "uniform"
            schedule: "constant"
            schedule_steps: 0
        rigid_shape_properties:
          length:
            range: [0.01, 2.0]
            operation: "scaling"
            distribution: "uniform"
            schedule: "constant"
            schedule_steps: 0
